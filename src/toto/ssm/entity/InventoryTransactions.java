package toto.ssm.entity;
// Generated May 7, 2020 10:21:16 AM by Hibernate Tools 4.3.1


import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.TableGenerator;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * InventoryTransactions generated by hbm2java
 */
@Entity
@Table(name="inventory_transactions")
public class InventoryTransactions  implements java.io.Serializable {
	private static final long serialVersionUID = 1L;
	private long id;
     private InventoryTransactionTypes inventoryTransactionTypes;
     private Orders orders;
     private Products products;
     private PurchaseOrders purchaseOrders;
     private String comments;
     private Date createDate;
     private String createUser;
     private int quantity;
     private Date transactionCreatedDate;
     private Date transactionModifiedDate;
     private Date updateDate;
     private List<PurchaseOrderDetails> purchaseOrderDetailses = new ArrayList<PurchaseOrderDetails>(0);

    public InventoryTransactions() {
    }

	
    public InventoryTransactions(long id, int quantity) {
        this.id = id;
        this.quantity = quantity;
    }
    public InventoryTransactions(long id, InventoryTransactionTypes inventoryTransactionTypes, Orders orders, Products products, PurchaseOrders purchaseOrders, String comments, Date createDate, String createUser, int quantity, Date transactionCreatedDate, Date transactionModifiedDate, Date updateDate, List<PurchaseOrderDetails> purchaseOrderDetailses) {
       this.id = id;
       this.inventoryTransactionTypes = inventoryTransactionTypes;
       this.orders = orders;
       this.products = products;
       this.purchaseOrders = purchaseOrders;
       this.comments = comments;
       this.createDate = createDate;
       this.createUser = createUser;
       this.quantity = quantity;
       this.transactionCreatedDate = transactionCreatedDate;
       this.transactionModifiedDate = transactionModifiedDate;
       this.updateDate = updateDate;
       this.purchaseOrderDetailses = purchaseOrderDetailses;
    }
   
    @TableGenerator(
            name="SSMGen", 
            table="ID_GEN", 
            pkColumnName="GEN_KEY", 
            valueColumnName="GEN_VALUE", 
            pkColumnValue="INVENTORYTRANSACTION_ID", 
            allocationSize=1)
    @Id 
    @Column(name="id")
    @GeneratedValue(strategy=GenerationType.TABLE, generator="SSMGen")
    public long getId() {
        return this.id;
    }
    
    public void ListId(long id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="transaction_type")
    public InventoryTransactionTypes getInventoryTransactionTypes() {
        return this.inventoryTransactionTypes;
    }
    
    public void ListInventoryTransactionTypes(InventoryTransactionTypes inventoryTransactionTypes) {
        this.inventoryTransactionTypes = inventoryTransactionTypes;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="customer_order_id")
    public Orders getOrders() {
        return this.orders;
    }
    
    public void ListOrders(Orders orders) {
        this.orders = orders;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="product_id")
    public Products getProducts() {
        return this.products;
    }
    
    public void ListProducts(Products products) {
        this.products = products;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="purchase_order_id")
    public PurchaseOrders getPurchaseOrders() {
        return this.purchaseOrders;
    }
    
    public void ListPurchaseOrders(PurchaseOrders purchaseOrders) {
        this.purchaseOrders = purchaseOrders;
    }

    
    @Column(name="comments")
    public String getComments() {
        return this.comments;
    }
    
    public void ListComments(String comments) {
        this.comments = comments;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="create_date", length=19)
    public Date getCreateDate() {
        return this.createDate;
    }
    
    public void ListCreateDate(Date createDate) {
        this.createDate = createDate;
    }

    
    @Column(name="create_user")
    public String getCreateUser() {
        return this.createUser;
    }
    
    public void ListCreateUser(String createUser) {
        this.createUser = createUser;
    }

    
    @Column(name="quantity", nullable=false)
    public int getQuantity() {
        return this.quantity;
    }
    
    public void ListQuantity(int quantity) {
        this.quantity = quantity;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="transaction_created_date", length=19)
    public Date getTransactionCreatedDate() {
        return this.transactionCreatedDate;
    }
    
    public void ListTransactionCreatedDate(Date transactionCreatedDate) {
        this.transactionCreatedDate = transactionCreatedDate;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="transaction_modified_date", length=19)
    public Date getTransactionModifiedDate() {
        return this.transactionModifiedDate;
    }
    
    public void ListTransactionModifiedDate(Date transactionModifiedDate) {
        this.transactionModifiedDate = transactionModifiedDate;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="update_date", length=19)
    public Date getUpdateDate() {
        return this.updateDate;
    }
    
    public void ListUpdateDate(Date updateDate) {
        this.updateDate = updateDate;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="inventoryTransactions")
    public List<PurchaseOrderDetails> getPurchaseOrderDetailses() {
        return this.purchaseOrderDetailses;
    }
    
    public void ListPurchaseOrderDetailses(List<PurchaseOrderDetails> purchaseOrderDetailses) {
        this.purchaseOrderDetailses = purchaseOrderDetailses;
    }


	public void setId(long id) {
		this.id = id;
	}


	public void setInventoryTransactionTypes(InventoryTransactionTypes inventoryTransactionTypes) {
		this.inventoryTransactionTypes = inventoryTransactionTypes;
	}


	public void setOrders(Orders orders) {
		this.orders = orders;
	}


	public void setProducts(Products products) {
		this.products = products;
	}


	public void setPurchaseOrders(PurchaseOrders purchaseOrders) {
		this.purchaseOrders = purchaseOrders;
	}


	public void setComments(String comments) {
		this.comments = comments;
	}


	public void setCreateDate(Date createDate) {
		this.createDate = createDate;
	}


	public void setCreateUser(String createUser) {
		this.createUser = createUser;
	}


	public void setQuantity(int quantity) {
		this.quantity = quantity;
	}


	public void setTransactionCreatedDate(Date transactionCreatedDate) {
		this.transactionCreatedDate = transactionCreatedDate;
	}


	public void setTransactionModifiedDate(Date transactionModifiedDate) {
		this.transactionModifiedDate = transactionModifiedDate;
	}


	public void setUpdateDate(Date updateDate) {
		this.updateDate = updateDate;
	}


	public void setPurchaseOrderDetailses(List<PurchaseOrderDetails> purchaseOrderDetailses) {
		this.purchaseOrderDetailses = purchaseOrderDetailses;
	}




}


