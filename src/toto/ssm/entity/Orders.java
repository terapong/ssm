package toto.ssm.entity;
// Generated May 7, 2020 10:21:16 AM by Hibernate Tools 4.3.1


import java.math.BigDecimal;
import java.util.Date;
import java.util.ArrayList;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.TableGenerator;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Orders generated by hbm2java
 */
@Entity
@Table(name="orders")
public class Orders  implements java.io.Serializable {
	private static final long serialVersionUID = 1L;
	private long id;
     
     private OrdersTaxStatus ordersTaxStatus;
     private Shippers shippers;
     
     private String createUser;
     private Long currentStatus;
     private String notes;
     
     private String paymentType;
     private String qty;
     //private String recipe;
     private String shipAddress;
     private String shipCity;
     private String shipCountryRegion;
     private String shipName;
     private String shipStateProvince;
     private String shipZipPostalCode;
     private Date shippedDate;
     private BigDecimal shippingFee;
     private Double taxRate;
     private BigDecimal taxes;
     
     @Temporal(TemporalType.TIMESTAMP)
     @Column(name="order_date", length=19)
     private Date orderDate;
     
     @Temporal(TemporalType.TIMESTAMP)
     @Column(name="paid_date", length=19)
     private Date paidDate;
     
     @Temporal(TemporalType.TIMESTAMP)
     @Column(name="update_date", length=19)
     private Date updateDate;
     
     @Temporal(TemporalType.TIMESTAMP)
     @Column(name="create_date", length=19)
     private Date createDate;
     
     private List<InventoryTransactions> inventoryTransactionses = new ArrayList<InventoryTransactions>(0);
     private List<Recipe> recipes = new ArrayList<Recipe>(0);
     private List<OrdersOrdersStatus> ordersOrdersStatuses = new ArrayList<OrdersOrdersStatus>(0);
     private List<OrderDetails> orderDetailses = new ArrayList<OrderDetails>(0);
     private List<OrdersStatusOrders> ordersStatusOrderses = new ArrayList<OrdersStatusOrders>(0);
     private List<Invoices> invoiceses = new ArrayList<Invoices>(0);
     private List<OrdersTaxStatus> ordersTaxStatuses = new ArrayList<OrdersTaxStatus>(0);
     //private List<Recipe> recipe = new ArrayList<Recipe>(0);
     
     private Plant plant;
     private XtblDocket xtblDockets;
     private Employees employees;
     private Project project;
     private Suppliers suppliers;
     private Customer customer;
     
    public Orders() {
    }

	
    public Orders(long id) {
        this.id = id;
    }
    
    @TableGenerator(
            name="SSMGen", 
            table="ID_GEN", 
            pkColumnName="GEN_KEY", 
            valueColumnName="GEN_VALUE", 
            pkColumnValue="ORDER_ID", 
            allocationSize=1)
    @Id 
    @Column(name="id")
    @GeneratedValue(strategy=GenerationType.TABLE, generator="SSMGen")
    public long getId() {
        return this.id;
    }
    
    public void ListId(long id) {
        this.id = id;
    }
    
    public void setId(long id) {
		this.id = id;
	}

	public void setOrdersTaxStatus(OrdersTaxStatus ordersTaxStatus) {
		this.ordersTaxStatus = ordersTaxStatus;
	}


	public void setShippers(Shippers shippers) {
		this.shippers = shippers;
	}


	public void setCreateDate(Date createDate) {
		this.createDate = createDate;
	}


	public void setCreateUser(String createUser) {
		this.createUser = createUser;
	}


	public void setCurrentStatus(Long currentStatus) {
		this.currentStatus = currentStatus;
	}


	public void setNotes(String notes) {
		this.notes = notes;
	}


	public void setOrderDate(Date orderDate) {
		this.orderDate = orderDate;
	}


	public void setPaidDate(Date paidDate) {
		this.paidDate = paidDate;
	}


	public void setPaymentType(String paymentType) {
		this.paymentType = paymentType;
	}


	public void setQty(String qty) {
		this.qty = qty;
	}




	public void setShipAddress(String shipAddress) {
		this.shipAddress = shipAddress;
	}


	public void setShipCity(String shipCity) {
		this.shipCity = shipCity;
	}


	public void setShipCountryRegion(String shipCountryRegion) {
		this.shipCountryRegion = shipCountryRegion;
	}


	public void setShipName(String shipName) {
		this.shipName = shipName;
	}


	public void setShipStateProvince(String shipStateProvince) {
		this.shipStateProvince = shipStateProvince;
	}


	public void setShipZipPostalCode(String shipZipPostalCode) {
		this.shipZipPostalCode = shipZipPostalCode;
	}


	public void setShippedDate(Date shippedDate) {
		this.shippedDate = shippedDate;
	}


	public void setShippingFee(BigDecimal shippingFee) {
		this.shippingFee = shippingFee;
	}


	public void setTaxRate(Double taxRate) {
		this.taxRate = taxRate;
	}


	public void setTaxes(BigDecimal taxes) {
		this.taxes = taxes;
	}


	public void setUpdateDate(Date updateDate) {
		this.updateDate = updateDate;
	}

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="tax_status_id")
    public OrdersTaxStatus getOrdersTaxStatus() {
        return this.ordersTaxStatus;
    }
    
    public void ListOrdersTaxStatus(OrdersTaxStatus ordersTaxStatus) {
        this.ordersTaxStatus = ordersTaxStatus;
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="shipper_id")
    public Shippers getShippers() {
        return this.shippers;
    }
    
    public void ListShippers(Shippers shippers) {
        this.shippers = shippers;
    }
    
    public Date getCreateDate() {
        return this.createDate;
    }
    
    


	public void ListCreateDate(Date createDate) {
        this.createDate = createDate;
    }

    
    @Column(name="create_user")
    public String getCreateUser() {
        return this.createUser;
    }
    
    public void ListCreateUser(String createUser) {
        this.createUser = createUser;
    }
    
    @Column(name="current_status")
    public Long getCurrentStatus() {
        return this.currentStatus;
    }
    
    public void ListCurrentStatus(Long currentStatus) {
        this.currentStatus = currentStatus;
    }

    
    @Column(name="notes")
    public String getNotes() {
        return this.notes;
    }
    
    public void ListNotes(String notes) {
        this.notes = notes;
    }

    public Date getOrderDate() {
        return this.orderDate;
    }
    
    public void ListOrderDate(Date orderDate) {
        this.orderDate = orderDate;
    }

    public Date getPaidDate() {
        return this.paidDate;
    }
    
    public void ListPaidDate(Date paidDate) {
        this.paidDate = paidDate;
    }

    
    @Column(name="payment_type")
    public String getPaymentType() {
        return this.paymentType;
    }
    
    public void ListPaymentType(String paymentType) {
        this.paymentType = paymentType;
    }

    
    @Column(name="qty")
    public String getQty() {
        return this.qty;
    }
    
    public void ListQty(String qty) {
        this.qty = qty;
    }

    @Column(name="ship_address")
    public String getShipAddress() {
        return this.shipAddress;
    }
    
    public void ListShipAddress(String shipAddress) {
        this.shipAddress = shipAddress;
    }

    
    @Column(name="ship_city")
    public String getShipCity() {
        return this.shipCity;
    }
    
    public void ListShipCity(String shipCity) {
        this.shipCity = shipCity;
    }

    
    @Column(name="ship_country_region")
    public String getShipCountryRegion() {
        return this.shipCountryRegion;
    }
    
    public void ListShipCountryRegion(String shipCountryRegion) {
        this.shipCountryRegion = shipCountryRegion;
    }

    
    @Column(name="ship_name")
    public String getShipName() {
        return this.shipName;
    }
    
    public void ListShipName(String shipName) {
        this.shipName = shipName;
    }

    
    @Column(name="ship_state_province")
    public String getShipStateProvince() {
        return this.shipStateProvince;
    }
    
    public void ListShipStateProvince(String shipStateProvince) {
        this.shipStateProvince = shipStateProvince;
    }

    
    @Column(name="ship_zip_postal_code")
    public String getShipZipPostalCode() {
        return this.shipZipPostalCode;
    }
    
    public void ListShipZipPostalCode(String shipZipPostalCode) {
        this.shipZipPostalCode = shipZipPostalCode;
    }

    public Date getShippedDate() {
        return this.shippedDate;
    }
    
    public void ListShippedDate(Date shippedDate) {
        this.shippedDate = shippedDate;
    }

    
    @Column(name="shipping_fee")
    public BigDecimal getShippingFee() {
        return this.shippingFee;
    }
    
    public void ListShippingFee(BigDecimal shippingFee) {
        this.shippingFee = shippingFee;
    }

    
    @Column(name="tax_rate", precision=22, scale=0)
    public Double getTaxRate() {
        return this.taxRate;
    }
    
    public void ListTaxRate(Double taxRate) {
        this.taxRate = taxRate;
    }

    
    @Column(name="taxes")
    public BigDecimal getTaxes() {
        return this.taxes;
    }
    
    public void ListTaxes(BigDecimal taxes) {
        this.taxes = taxes;
    }

    public Date getUpdateDate() {
        return this.updateDate;
    }
    
    public void ListUpdateDate(Date updateDate) {
        this.updateDate = updateDate;
    }
    
    @OneToMany(cascade = {CascadeType.ALL})
    @JoinColumn(name="order_id")
    public List<Recipe> getRecipe() {
    	return this.recipes;
    }
    
    public void setRecipe(List<Recipe> recipes) {
    	this.recipes = recipes;
    }
    
    @OneToMany(fetch=FetchType.LAZY, mappedBy="orders")
    public List<InventoryTransactions> getInventoryTransactionses() {
        return this.inventoryTransactionses;
    }

	public void setInventoryTransactionses(List<InventoryTransactions> inventoryTransactionses) {
		this.inventoryTransactionses = inventoryTransactionses;
	}
    
@OneToMany(fetch=FetchType.LAZY, mappedBy="orders")
    public List<OrderDetails> getOrderDetailses() {
        return this.orderDetailses;
    }

	public void setOrderDetailses(List<OrderDetails> orderDetailses) {
		this.orderDetailses = orderDetailses;
	}

@OneToMany(fetch=FetchType.LAZY, mappedBy="orders")
    public List<OrdersStatusOrders> getOrdersStatusOrderses() {
        return this.ordersStatusOrderses;
    }

	public void setOrdersStatusOrderses(List<OrdersStatusOrders> ordersStatusOrderses) {
		this.ordersStatusOrderses = ordersStatusOrderses;
	}

@OneToMany(fetch=FetchType.LAZY, mappedBy="orders")
    public List<Invoices> getInvoiceses() {
        return this.invoiceses;
    }
    
	public void setInvoiceses(List<Invoices> invoiceses) {
		this.invoiceses = invoiceses;
	}
	
@OneToMany(fetch=FetchType.LAZY, mappedBy="orders")
    public List<OrdersTaxStatus> getOrdersTaxStatuses() {
        return this.ordersTaxStatuses;
    }
    
	public void setOrdersTaxStatuses(List<OrdersTaxStatus> ordersTaxStatuses) {
		this.ordersTaxStatuses = ordersTaxStatuses;
	}

@OneToMany(fetch=FetchType.LAZY, mappedBy="orders")
    public List<OrdersOrdersStatus> getOrdersOrdersStatuses() {
        return this.ordersOrdersStatuses;
    }

	public void setOrdersOrdersStatuses(List<OrdersOrdersStatus> ordersOrdersStatuses) {
		this.ordersOrdersStatuses = ordersOrdersStatuses;
	}
	
    @OneToOne
    public Employees getEmployees() {
        return this.employees;
    }
	public void setEmployees(Employees employees) {
		this.employees = employees;
	}
    

	@OneToOne
	public Project getProject() {
		return project;
	}

	public void setProject(Project project) {
		this.project = project;
	}
    
    @OneToOne
    public Plant getPlant() {
		return plant;
	}

	public void setPlant(Plant plant) {
		this.plant = plant;
	}
	
	@OneToOne
    public XtblDocket getXtblDockets() {
    	return xtblDockets;
    }

    public void setXtblDockets(XtblDocket xtblDockets) {
		this.xtblDockets = xtblDockets;
	}

    @OneToOne
	public Suppliers getSuppliers() {
		return suppliers;
	}

	public void setSuppliers(Suppliers suppliers) {
		this.suppliers = suppliers;
	}
	@OneToOne
	public Customer getCustomer() {
	    return this.customer;
	}
	public void setCustomer(Customer customer) {
		this.customer = customer;
	}
}


